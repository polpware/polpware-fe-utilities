{"version":3,"sources":["ng://@polpware/fe-utilities/src/lib/src/tools/url.ts","ng://@polpware/fe-utilities/src/lib/src/typing/type-checker.ts","ng://@polpware/fe-utilities/src/lib/src/tools/hash.ts","ng://@polpware/fe-utilities/src/lib/src/typing/type-cast.ts","ng://@polpware/fe-utilities/src/lib/src/promise/promise-like.ts","ng://@polpware/fe-utilities/src/lib/src/tools/math.ts","ng://@polpware/fe-utilities/src/lib/src/tools/arr.ts","ng://@polpware/fe-utilities/src/lib/src/tools/str.ts","ng://@polpware/fe-utilities/src/lib/src/tools/set.ts","ng://@polpware/fe-utilities/src/lib/src/promise/monadic-operations.ts","ng://@polpware/fe-utilities/src/lib/src/promise/inter-op.ts"],"names":["urlEncodePair","key","value","str","Array","forEach","item","push","encodeURIComponent","getParamByName","name","url","replace","results","RegExp","exec","decodeURIComponent","isBoolean","x","isNumber","isString","isSymbol","isNull","isUndefined","undefined","isArray","isObject","isFunction","tyBool","val","pred","tyNull","tyUndefined","tyNumber","tyString","tySymbol","tyObject","tyArray","tyFunction","preDefinedTypes","ok","ty","hashCode","hash","typeChecker.ok","typeChecker.tyBool","typeChecker.tyNumber","toString","length","i","len","charCodeAt","hashPrimitiveMember","configuration","code","safeParseFloat","typeChecker.tyString","parseFloat","safeParseBool","toLowerCase","bind","fn","thisArg","apply","arguments","Object","prototype","call","doResolve","onFulfilled","onRejected","done","reason","ex","handle","deferred","me","this","_state","setTimeout","cb","ret","_value","e","reject","resolve","_deferreds","finale","newValue","TypeError","then","DummyPromise","Handler","all","arrayArg","args","slice","remaining","res","constructor","race","values","always","fail","promise","progress","d","Date","getTime","c","r","Math","random","floor","min","max","data","p","hasOwnProperty","join","window","location","href","src","o","n","format","params","s","firstSet","secondSet","predicate","filter","some","y","typeChecker.tyArray","parseInt","typeChecker.isNull","typeChecker.isUndefined","isNaN","Error","prop","typeChecker.isFunction","restArgs","guard","state","readerPromise","settings","validator","adaptor"],"mappings":"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","sourcesContent":["/**\r\n * Encodes a key-value pair, where a value can be an array.\r\n */\r\nexport function urlEncodePair(key: string, value: any, str: Array<string>): void {\r\n    if (value instanceof Array) {\r\n        value.forEach((item) => {\r\n            str.push(encodeURIComponent(key) + '[]=' + encodeURIComponent(item));\r\n        });\r\n    } else {\r\n        str.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n    }\r\n}\r\n\r\n/**\r\n * Encodes an object in www form.\r\n */\r\nexport function urlEncode(data: Object): string {\r\n    const str: Array<string> = [];\r\n    for (let p in data) {\r\n        if (data.hasOwnProperty(p)) {\r\n            urlEncodePair(p, data[p], str);\r\n        }\r\n    }\r\n    return str.join('&').replace(/%20/g, '+');\r\n}\r\n\r\nexport function getParamByName(name: string, url: string): string | null {\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    const regex = new RegExp('[?#&]' + name + '(=([^&#]*)|&|#|$)');\r\n    const results = regex.exec(url);\r\n    if (!results) {\r\n        return null;\r\n    }\r\n    if (!results[2]) {\r\n        return '';\r\n    }\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\nexport function getQueryParamByName(name: string, url?: string): string | null {\r\n    if (!url) {\r\n        url = window.location.href;\r\n    }\r\n    return getParamByName(name, url);\r\n}\r\n\r\nexport function getHashParamByName(name: string, url?: string): string | null {\r\n    if (!url) {\r\n        url = window.location.hash;\r\n    }\r\n    return getParamByName(name, url);\r\n}\r\n","/*\r\nBasicTypes := \r\n    boolean \r\n  | number \r\n  | string \r\n  | symbol\r\n  | null\r\n  | undefined\r\n  | array \r\n  | object\r\n  | function\r\n*/\r\n\r\n\r\nexport function isBoolean(x: any): x is boolean {\r\n    return typeof x === 'boolean';\r\n}\r\n\r\nexport function isNumber(x: any): x is number {\r\n    return typeof x === 'number';\r\n}\r\n\r\nexport function isString(x: any): x is string {\r\n    return typeof x === 'string';\r\n}\r\n\r\nexport function isSymbol(x: any): x is symbol {\r\n    return typeof x === 'symbol';\r\n}\r\n\r\nexport function isNull(x: any): x is null {\r\n    return x === null;\r\n}\r\n\r\nexport function isUndefined(x: any): x is undefined {\r\n    return x === undefined;\r\n}\r\n\r\nexport function isArray(x: any): x is Array<any> {\r\n    return x instanceof Array;\r\n}\r\n\r\nexport function isObject(x: any): x is Object {\r\n    return typeof x === 'object';\r\n}\r\n\r\nexport function isFunction(x: any): x is Function {\r\n    return typeof x === 'function';\r\n}\r\n\r\nexport interface ITypeDef {\r\n    name: string,\r\n    val: any,\r\n    pred: (any) => boolean\r\n};\r\n\r\nexport const tyBool: ITypeDef = { name: 'Boolean', val: false, pred: isBoolean };\r\nexport const tyNull: ITypeDef = { name: 'Null', val: null, pred: isNull };\r\nexport const tyUndefined: ITypeDef = { name: 'Undefined', val: undefined, pred: isUndefined };\r\nexport const tyNumber: ITypeDef = { name: 'Number', val: 0, pred: isNumber };\r\nexport const tyString: ITypeDef = { name: 'String', val: '', pred: isString };\r\nexport const tySymbol: ITypeDef = { name: 'Symbol', val: null, pred: isSymbol };\r\nexport const tyObject: ITypeDef = { name: 'Object', val: function() { return {}; }, pred: isObject };\r\nexport const tyArray: ITypeDef = { name: 'Array', val: function() { return []; }, pred: isArray };\r\nexport const tyFunction: ITypeDef = { name: 'Function', val: function() { }, pred: isFunction };\r\n\r\n/**\r\n *  Predefined types and their properties.\r\n */\r\nconst preDefinedTypes: { [key: string]: ITypeDef } = {\r\n    tyBool: tyBool,\r\n    tyNull: tyNull,\r\n    tyUndefined: tyUndefined,\r\n    tyNumber: tyNumber,\r\n    tyString: tyString,\r\n    tySymbol: tySymbol,\r\n    tyObject: tyObject,\r\n    tyArray: tyArray,\r\n    tyFunction: tyFunction\r\n};\r\n/**\r\n * Returns the default value for a given type.\r\n */\r\nexport function defaultValue(ty: ITypeDef): any {\r\n    let val = ty.val;\r\n    if (ty !== tyFunction && typeof val === 'function') {\r\n        val = val();\r\n    }\r\n    return val;\r\n}\r\n\r\n/**\r\n * Type checks if a given value is type of the given ty\r\n */\r\nexport function ok(value: any, ty: ITypeDef): boolean {\r\n    return ty.pred(value);\r\n}\r\n\r\n/**\r\n * Returns the type for the given value.\r\n */\r\nexport function getType(value: any): ITypeDef {\r\n    for (let prop in preDefinedTypes) {\r\n        if (ok(value, preDefinedTypes[prop])) {\r\n            return preDefinedTypes[prop];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function assert(value: any, ty: ITypeDef): void {\r\n    if (ok(value, ty)) {\r\n        return;\r\n    }\r\n    throw new Error('type check error: exptected type is ' +\r\n        ty + ' but given type is ' + typeof value);\r\n}\r\n","/**\n * @fileOverview\n * Provides utilities for computing hash values\n */\n\nimport * as typeChecker from '../typing/type-checker';\n\n/**\n * Computes the hash code for a given value.\n * This method takes into account the type of the given\n * value when generating its hash code.\n */\nexport function hashCode(value: any): number {\n    let hash = 0;\n    if (typeChecker.ok(value, typeChecker.tyBool)) {\n        value = value ? 1 : 0;\n    } else if (typeChecker.ok(value, typeChecker.tyNumber)) {\n        if (value === 0) {\n            return 0;\n        }\n    }\n\n    if (!value) {\n        return 0;\n    }\n\n    value = value.toString();\n    if (value.length === 0) {\n        return hash;\n    }\n    /*jslint plusplus: true */\n    for (let i = 0, len = value.length; i < len; i++) {\n        const chr = value.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n}\n\n/**\n * Computes the hash code for a member of an object.\n */\nfunction hashPrimitiveMember(name: string, value: any, configuration: { [key: string]: number }) {\n    const code = hashCode(value);\n    if (configuration) {\n        const bits = configuration[name];\n        if (bits) {\n            return code << configuration[name];\n        }\n    }\n    return code;\n}\n\n/**\n * Computes the hash code for a member of an object, based on\n * the given member member, the value to be hashed, and the configuration\n * about how each member contributes to the enire hash code of the\n * object.\n */\nexport function hashMember(name: string, value: any, configuration: { [key: string]: number }) {\n    if (typeChecker.ok(value, typeChecker.tyArray)) {\n        let code = 0;\n        /*jslint plusplus: true */\n        for (let i = 0; i < value.length; i++) {\n            code = code + hashPrimitiveMember(name, value[i], configuration);\n        }\n        return code;\n    }\n    return hashPrimitiveMember(name, value, configuration);\n}\n","import * as typeChecker from './type-checker';\r\n\r\nexport function safeParseString(value: any): string {\r\n    if (!value) {\r\n        return '';\r\n    }\r\n\r\n    return value.toString();\r\n}\r\n\r\n/**\r\n * Parses a given value into an integer.\r\n */\r\nexport function safeParseInt(value: any): number {\r\n    if (!value) {\r\n        return 0;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return parseInt(value, 10);\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value;\r\n    }\r\n    return 0;\r\n}\r\n\r\n/**\r\n * Parses a given value into a float number.\r\n */\r\nexport function safeParseFloat(value: any): number {\r\n    if (!value) {\r\n        return 0.00;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return parseFloat(value);\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value;\r\n    }\r\n    return 0.00;\r\n}\r\n\r\n/**\r\n * Parses a given value into a bool value.\r\n */\r\nexport function safeParseBool(value: any): boolean {\r\n    if (!value) {\r\n        return false;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyBool)) {\r\n        return value;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return value.toLowerCase() === 'true';\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value > 0;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Returns if a given value can be safely converted into the given type.\r\n */\r\nexport function convertible(value: any, ty: typeChecker.ITypeDef): boolean {\r\n    if (typeChecker.ok(value, ty)) {\r\n        return true;\r\n    }\r\n\r\n    if (typeChecker.isNull(value) || typeChecker.isUndefined(value)) {\r\n        return false;\r\n    }\r\n\r\n    if (ty === typeChecker.tyNumber && isNaN(value)) {\r\n        return false;\r\n    }\r\n\r\n    // TODO: refine\r\n    return true;\r\n}\r\n\r\n/**\r\n * Safely converts the given value into a value of the given type.\r\n */\r\nexport function convert(value: any, ty: typeChecker.ITypeDef): any {\r\n    if (ty === typeChecker.tyNumber) {\r\n        return safeParseFloat(value);\r\n    }\r\n    if (ty === typeChecker.tyBool) {\r\n        return safeParseBool(value);\r\n    }\r\n    if (ty === typeChecker.tyString) {\r\n        return value.toString();\r\n    }\r\n\r\n    throw new Error('Cannot convert the given value to the given type');\r\n}\r\n","// \n// Author:: Tom Tang <principleware@gmail.com>\n// Copyright:: Copyright (c) 2017, Tom Tang\n// \n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// \n// Except as contained in this notice, the name(s) of the above copyright\n// holders shall not be used in advertising or otherwise to promote the\n// sale, use or other dealings in this Software without prior written\n// authorization.\n\nfunction asap(fn) {\n    setTimeout(fn, 1);\n}\n\nfunction bind(fn, thisArg) {\n    return function() {\n        fn.apply(thisArg, arguments);\n    };\n}\n\nvar isArray = Array.isArray || function(value) { return Object.prototype.toString.call(value) === \"[object Array]\"; };\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, onFulfilled, onRejected) {\n    var done = false;\n    try {\n        fn(function(value) {\n            if (done) {\n                return;\n            }\n            done = true;\n            onFulfilled(value);\n        }, function(reason) {\n            if (done) {\n                return;\n            }\n            done = true;\n            onRejected(reason);\n        });\n    } catch (ex) {\n        if (done) {\n            return;\n        }\n        done = true;\n        onRejected(ex);\n    }\n}\n\nfunction handle(deferred) {\n    var me = this;\n    if (this._state === null) {\n        this._deferreds.push(deferred);\n        return;\n    }\n    asap(function() {\n        var cb, ret;\n        cb = me._state ? deferred.onFulfilled : deferred.onRejected;\n        if (cb === null) {\n            (me._state ? deferred.resolve : deferred.reject)(me._value);\n            return;\n        }\n        try {\n            ret = cb(me._value);\n        }\n        catch (e) {\n            deferred.reject(e);\n            return;\n        }\n        deferred.resolve(ret);\n    });\n}\n\n\nfunction finale() {\n    var i, len;\n    /*jslint plusplus:true */\n    for (i = 0, len = this._deferreds.length; i < len; i++) {\n        handle.call(this, this._deferreds[i]);\n    }\n    this._deferreds = null;\n}\n\nfunction reject(newValue) {\n    this._state = false;\n    this._value = newValue;\n    finale.call(this);\n}\n\nfunction resolve(newValue) {\n    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n        if (newValue === this) {\n            throw new TypeError('A promise cannot be resolved with itself.');\n        }\n        if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n            var then = newValue.then;\n            if (typeof then === 'function') {\n                doResolve(bind(then, newValue), bind(resolve, this), bind(reject, this));\n                return;\n            }\n        }\n        this._state = true;\n        this._value = newValue;\n        finale.call(this);\n    } catch (e) { reject.call(this, e); }\n}\n\n/**\n * Defines a dummy promise, which simulates the behavior of a normal Promise\n * but is suitable used in synchronous call.\n * This resulted object is also a jQuery deferred object, therefore,\n * it will be resolved by the jQuery deferred object if it is a resolved value in\n * the jQuery deferred object.\n */\nexport function DummyPromise<T>(fn: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?) => void) => void) {\n    if (typeof this !== 'object') {\n        throw new TypeError('Promises must be constructed via new');\n    }\n    if (typeof fn !== 'function') {\n        throw new TypeError('not a function');\n    }\n    this._state = null;\n    this._value = null;\n    this._deferreds = [];\n\n    doResolve(fn, bind(resolve, this), bind(reject, this));\n}\n\n\nfunction Handler(onFulfilled, onRejected, resolve, reject) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n}\n\n\nDummyPromise.prototype['catch'] = function(onRejected) {\n    return this.then(null, onRejected);\n};\n\nDummyPromise.prototype.then = function(onFulfilled, onRejected) {\n    const me = this;\n    return new DummyPromise(function(resolve, reject) {\n        handle.call(me, new Handler(onFulfilled, onRejected, resolve, reject));\n    });\n};\n\nDummyPromise.prototype.all = function(arrayArg) {\n    var args = Array.prototype.slice.call(arguments.length === 1 && isArray(arrayArg) ? arrayArg : arguments);\n\n    return new DummyPromise(function(resolve, reject) {\n        if (args.length === 0) {\n            return resolve([]);\n        }\n        var remaining = args.length, i;\n        function res(i, val) {\n            try {\n                if (val && (typeof val === 'object' || typeof val === 'function')) {\n                    var then = val.then;\n                    if (typeof then === 'function') {\n                        then.call(val, function(val) { res(i, val); }, reject);\n                        return;\n                    }\n                }\n                args[i] = val;\n\n                /*jslint plusplus: true */\n                if (--remaining === 0) {\n                    resolve(args);\n                }\n            } catch (ex) {\n                reject(ex);\n            }\n        }\n        /*jslint plusplus: true */         for (i = 0; i < args.length; i++) {\n            res(i, args[i]);\n        }\n    });\n};\n\nDummyPromise.prototype.resolve = function(value) {\n    if (value && typeof value === 'object' && value.constructor === DummyPromise) {\n        return value;\n    }\n\n    return new DummyPromise(function(resolve) {\n        resolve(value);\n    });\n};\n\nDummyPromise.prototype.reject = function(value) {\n    /*jslint unparam: true */\n    return new DummyPromise(function(resolve, reject) {\n        reject(value);\n    });\n};\n\nDummyPromise.prototype.race = function(values) {\n    return new DummyPromise(function(resolve, reject) {\n        var i, len;\n        /*jslint plusplus: true */\n        for (i = 0, len = values.length; i < len; i++) {\n            values[i].then(resolve, reject);\n        }\n    });\n};\n\nDummyPromise.prototype.always = function(onFulfilled) {\n    return this.then(onFulfilled, onFulfilled);\n};\n\nDummyPromise.prototype.done = function(onFulfilled) {\n    return this.then(onFulfilled);\n};\n\nDummyPromise.prototype.fail = function(onRejected) {\n    return this.then(null, onRejected);\n};\n\nDummyPromise.prototype.promise = function() {\n    return this;\n};\n\nDummyPromise.prototype.progress = function() {\n    return this;\n};\n","/**\r\n * Generates a guid.\r\n */\r\nexport function guid() {\r\n    let d = new Date().getTime();\r\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\n/**\r\n * Generates a random number between the given range\r\n */\r\nexport function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","/**\r\n * Pushs an array or a single value into the thisArg;\r\n */\r\nexport function pushArray<T>(thisArg: Array<T>, src: Array<T> | T): void {\r\n    if (!(src instanceof Array)) {\r\n        thisArg.push(src);\r\n        return;\r\n    }\r\n\r\n    src.forEach(function(item) {\r\n        thisArg.push(item);\r\n    });\r\n}\r\n\r\n/**\r\n * Turns the values in an object into an array\r\n */\r\nexport function makeArray(o: Object) {\r\n    const ret = [];\r\n    for (let n in o) {\r\n        if (o.hasOwnProperty(n)) {\r\n            ret.push(o[n]);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","/**\r\n * Replaces the placeholders a given format with the given parameters.\r\n */\r\nexport function replace(format: string, params: { [key: string]: any }): string {\r\n    /*jslint unparam: true */\r\n    return format.replace(/\\{([a-zA-Z]+)\\}/g, function(s, key) {\r\n        return (typeof params[key] === 'undefined') ? '' : params[key];\r\n    });\r\n}\r\n\r\n/**\r\n * Transforms the given string into one where\r\n * some characters have been properly replaced with\r\n * their escape versions.\r\n */\r\nexport function applyEscape(data: string): string {\r\n    data = data\r\n        .replace(/[\\\\]/g, '\\\\\\\\')\r\n        .replace(/[\\\"]/g, '\\\\\\\"')\r\n        .replace(/[\\/]/g, '\\\\/')\r\n        .replace(/[\\b]/g, '\\\\b')\r\n        .replace(/[\\f]/g, '\\\\f')\r\n        .replace(/[\\n]/g, '\\\\n')\r\n        .replace(/[\\r]/g, '\\\\r')\r\n        .replace(/[\\t]/g, '\\\\t');\r\n    return data;\r\n}\r\n\r\n/**\r\n * Undo the work by applyEscape. It replaces the escape\r\n * characters with their unescaped ones.\r\n */\r\nexport function reverseEscape(data: string): string {\r\n    data = data\r\n        .replace(/\\\\\\\\/g, '\\\\')\r\n        .replace(/\\\\\\\"/g, '\\\"')\r\n        .replace(/\\\\\\//g, '\\/')\r\n        .replace(/\\\\\\b/g, '\\b')\r\n        .replace(/\\\\\\f/g, '\\f')\r\n        .replace(/\\\\\\n/g, '\\n')\r\n        .replace(/\\\\\\r/g, '\\r')\r\n        .replace(/\\\\\\t/g, '\\t');\r\n    return data;\r\n}\r\n","// firstSet - secondSet (any element not in secondSet)\r\nexport function diff<T, U>(firstSet: Array<T>,\r\n    secondSet: Array<U>,\r\n    predicate: (firstElem: T, secondElem: U) => boolean): Array<T> {\r\n    return firstSet.filter((x: T) => {\r\n        return !secondSet.some((y: U) => {\r\n            return predicate(x, y);\r\n        });\r\n    });\r\n}\r\n\r\n// firstSet intersection secondSet\r\nexport function intersection<T, U>(firstSet: Array<T>,\r\n    secondSet: Array<U>,\r\n    predicate: (firstElem: T, secondElem: U) => boolean): Array<T> {\r\n    return firstSet.filter((x: T) => {\r\n        return secondSet.some((y: U) => {\r\n            return predicate(x, y);\r\n        });\r\n    });\r\n}\r\n","// \r\n// Author:: Tom Tang <principleware@gmail.com>\r\n// Copyright:: Copyright (c) 2017, Tom Tang\r\n// \r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to\r\n// permit persons to whom the Software is furnished to do so, subject to\r\n// the following conditions:\r\n// \r\n// The above copyright notice and this permission notice shall be\r\n// included in all copies or substantial portions of the Software.\r\n// \r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n// \r\n// Except as contained in this notice, the name(s) of the above copyright\r\n// holders shall not be used in advertising or otherwise to promote the\r\n// sale, use or other dealings in this Software without prior written\r\n// authorization.\r\n\r\n\r\nimport { DummyPromise } from './promise-like';\r\nimport * as typeChecker from '../typing/type-checker';\r\n\r\n/**\r\n * Lifts a single value or a function into a Promise-like object.\r\n * Provides a method of wrapping a single value or a function  into a Promise,\r\n * in order that the following operation \r\n * may conform to the standard Promise operation.\r\n * In some scenario, we may first attempt to get a value from cache.\r\n * Motivation.\r\n * In this case, we need to return a value. However, if the value is\r\n * not available in the cache, we may have to go ahead to load it\r\n * asynchronously. Loading a value asynchronously usually returns\r\n * a Promise. To untify the return from two cases, we\r\n * escalate a single value into a Promise.\r\n */\r\nexport function lift<T>(value: T, thisArg: Object): PromiseLike<T> {\r\n    /*jslint unparam: true */\r\n    return new DummyPromise(function(resolve, reject) {\r\n        if (typeChecker.isFunction(value)) {\r\n            const restArgs = [];\r\n            /*jslint plusplus: true */\r\n            for (let i = 2; i < arguments.length; i++) {\r\n                restArgs.push(arguments[i]);\r\n            }\r\n            const ret = value.apply(thisArg || null, restArgs);\r\n            resolve(ret);\r\n        } else {\r\n            resolve(value);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Lifts a value into an rejected state.\r\n */\r\nexport function liftIntoReject<T>(value: T): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        /*jslint unparam: true */\r\n        reject(value);\r\n    });\r\n}\r\n\r\n/**\r\n * Converts a given promise into another promise which ensures that\r\n * the given guard evalutes to be true from the state of the given promise.\r\n */\r\nexport function liftWithGuard<T>(promise: PromiseLike<T>, guard: (x: T) => boolean): PromiseLike<T> {\r\n    return promise.then(function(data) {\r\n        return new DummyPromise(function(resolve, reject) {\r\n            if (guard(data)) {\r\n                resolve(data);\r\n            } else {\r\n                reject(data);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Settles a promise.\r\n */\r\nexport function settle<T>(promise: PromiseLike<T>): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve) {\r\n        promise.then(function(value) {\r\n            resolve({\r\n                state: 'fulfilled',\r\n                data: value\r\n            });\r\n        }, function() {\r\n            resolve({\r\n                state: 'rejected'\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Converts the given promise into a promise which does not reject anything.\r\n */\r\nexport function liftToPredicate<T>(promise: PromiseLike<T>, guard: (x: T) => boolean): PromiseLike<boolean> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        /*jslint unparam: true */\r\n        promise.then(function(data) {\r\n            resolve(guard(data));\r\n        }, function() {\r\n            resolve(false);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport interface IPipelineSettings<U> {\r\n    validator?: (x) => boolean,\r\n    adaptor: (x) => U\r\n}\r\n\r\n/**\r\n * Transforms a given promise with additonal pipeline processing.\r\n * Specifically, in this method, compared to the given promise, the return\r\n * promise contains validating and adpating stages.\r\n */\r\nexport function readerPipeline<T, U>(readerPromise: PromiseLike<T>, settings: IPipelineSettings<U>) {\r\n    return readerPromise\r\n        .then(function(data) {\r\n            if (settings.validator) {\r\n                if (!settings.validator(data)) {\r\n                    throw new Error('Data is not valid: ' + data);\r\n                }\r\n            }\r\n            return data;\r\n        })\r\n        .then(function(data) {\r\n            return settings.adaptor(data);\r\n        });\r\n}\r\n\r\n/**\r\n * Transforms a given promise into one promise with our own implementation.\r\n */\r\nexport function transform<T>(promise: PromiseLike<T>): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        promise.then(resolve, reject);\r\n    });\r\n}\r\n","/**\n * @fileOverview\n * Provides utilities for making interoperable the promise-like objects\n * from different modules.\n */\n/**\n * Extends a given promise into a deferred object of jQuery.\n * With this extension, we are able to chain together jQuery deferred\n * objects (which are also promise objects.)\n */\nexport function tojQueryDeferred(promise) {\n    if (!promise.always) {\n        promise.always = function(onFulfilled) {\n            return this.then(onFulfilled, onFulfilled);\n        };\n    }\n    if (!promise.done) {\n        promise.done = function(onFulfilled) {\n            return this.then(onFulfilled);\n        };\n    }\n    if (!promise.fail) {\n        promise.fail = function(onRejected) {\n            return this.then(null, onRejected);\n        };\n    }\n    if (!promise.progress) {\n        promise.progress = function() {\n            return this;\n        };\n    }\n    if (!promise.promise) {\n        promise.promise = function() {\n            return this;\n        };\n    }\n    return promise;\n}\n"]}