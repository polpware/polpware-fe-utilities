{"version":3,"file":"principleware-fe-utilities.umd.min.js","sources":["../../out-tsc/lib/src/promise/promise-like.ts","../../out-tsc/lib/src/typing/type-checker.ts","../../out-tsc/lib/src/tools/url.ts","../../out-tsc/lib/src/tools/hash.ts","../../out-tsc/lib/src/typing/type-cast.ts","../../out-tsc/lib/src/promise/inter-op.ts","../../out-tsc/lib/src/promise/monadic-operations.ts","../../out-tsc/lib/src/tools/arr.ts","../../out-tsc/lib/src/tools/math.ts","../../out-tsc/lib/src/tools/str.ts"],"sourcesContent":["\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction asap(fn) {\n    setTimeout(fn, 1);\n}\n/**\n * @param {?} fn\n * @param {?} thisArg\n * @return {?}\n */\nfunction bind(fn, thisArg) {\n    return function() {\n        fn.apply(thisArg, arguments);\n    };\n}\n\nvar /** @type {?} */ isArray = Array.isArray || function(value) { return Object.prototype.toString.call(value) === \"[object Array]\"; };\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n * \n * Makes no guarantees about asynchrony.\n * @param {?} fn\n * @param {?} onFulfilled\n * @param {?} onRejected\n * @return {?}\n */\nfunction doResolve(fn, onFulfilled, onRejected) {\n    var /** @type {?} */ done = false;\n    try {\n        fn(function(value) {\n            if (done) {\n                return;\n            }\n            done = true;\n            onFulfilled(value);\n        }, function(reason) {\n            if (done) {\n                return;\n            }\n            done = true;\n            onRejected(reason);\n        });\n    } catch ( /** @type {?} */ex) {\n        if (done) {\n            return;\n        }\n        done = true;\n        onRejected(ex);\n    }\n}\n/**\n * @param {?} deferred\n * @return {?}\n */\nfunction handle(deferred) {\n    var /** @type {?} */ me = this;\n    if (this._state === null) {\n        this._deferreds.push(deferred);\n        return;\n    }\n    asap(function() {\n        var /** @type {?} */ cb, /** @type {?} */ ret;\n        cb = me._state ? deferred.onFulfilled : deferred.onRejected;\n        if (cb === null) {\n            (me._state ? deferred.resolve : deferred.reject)(me._value);\n            return;\n        }\n        try {\n            ret = cb(me._value);\n        }\n        catch ( /** @type {?} */e) {\n            deferred.reject(e);\n            return;\n        }\n        deferred.resolve(ret);\n    });\n}\n/**\n * @return {?}\n */\nfunction finale() {\n    var /** @type {?} */ i, /** @type {?} */ len;\n    /*jslint plusplus:true */\n    for (i = 0, len = this._deferreds.length; i < len; i++) {\n        handle.call(this, this._deferreds[i]);\n    }\n    this._deferreds = null;\n}\n/**\n * @param {?} newValue\n * @return {?}\n */\nfunction reject(newValue) {\n    this._state = false;\n    this._value = newValue;\n    finale.call(this);\n}\n/**\n * @param {?} newValue\n * @return {?}\n */\nfunction resolve(newValue) {\n    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n        if (newValue === this) {\n            throw new TypeError('A promise cannot be resolved with itself.');\n        }\n        if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n            var /** @type {?} */ then = newValue.then;\n            if (typeof then === 'function') {\n                doResolve(bind(then, newValue), bind(resolve, this), bind(reject, this));\n                return;\n            }\n        }\n        this._state = true;\n        this._value = newValue;\n        finale.call(this);\n    } catch ( /** @type {?} */e) { reject.call(this, e); }\n}\n/**\n * Defines a dummy promise, which simulates the behavior of a normal Promise\n * but is suitable used in synchronous call.\n * This resulted object is also a jQuery deferred object, therefore,\n * it will be resolved by the jQuery deferred object if it is a resolved value in\n * the jQuery deferred object.\n * @template T\n * @param {?} fn\n * @return {?}\n */\nexport function DummyPromise<T>(fn: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?) => void) => void) {\n    if (typeof this !== 'object') {\n        throw new TypeError('Promises must be constructed via new');\n    }\n    if (typeof fn !== 'function') {\n        throw new TypeError('not a function');\n    }\n    this._state = null;\n    this._value = null;\n    this._deferreds = [];\n\n    doResolve(fn, bind(resolve, this), bind(reject, this));\n}\n/**\n * @param {?} onFulfilled\n * @param {?} onRejected\n * @param {?} resolve\n * @param {?} reject\n * @return {?}\n */\nfunction Handler(onFulfilled, onRejected, resolve, reject) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n}\n\n\nDummyPromise.prototype['catch'] = function(onRejected) {\n    return this.then(null, onRejected);\n};\n\nDummyPromise.prototype.then = function(onFulfilled, onRejected) {\n    const /** @type {?} */ me = this;\n    return new DummyPromise(function(resolve, reject) {\n        handle.call(me, new Handler(onFulfilled, onRejected, resolve, reject));\n    });\n};\n\nDummyPromise.prototype.all = function(arrayArg) {\n    var /** @type {?} */ args = Array.prototype.slice.call(arguments.length === 1 && isArray(arrayArg) ? arrayArg : arguments);\n\n    return new DummyPromise(function(resolve, reject) {\n        if (args.length === 0) {\n            return resolve([]);\n        }\n        var /** @type {?} */ remaining = args.length, /** @type {?} */ i;\n/**\n * @param {?} i\n * @param {?} val\n * @return {?}\n */\nfunction res(i, val) {\n            try {\n                if (val && (typeof val === 'object' || typeof val === 'function')) {\n                    var /** @type {?} */ then = val.then;\n                    if (typeof then === 'function') {\n                        then.call(val, function(val) { res(i, val); }, reject);\n                        return;\n                    }\n                }\n                args[i] = val;\n\n                /*jslint plusplus: true */\n                if (--remaining === 0) {\n                    resolve(args);\n                }\n            } catch ( /** @type {?} */ex) {\n                reject(ex);\n            }\n        }\n        /*jslint plusplus: true */         for (i = 0; i < args.length; i++) {\n            res(i, args[i]);\n        }\n    });\n};\n\nDummyPromise.prototype.resolve = function(value) {\n    if (value && typeof value === 'object' && value.constructor === DummyPromise) {\n        return value;\n    }\n\n    return new DummyPromise(function(resolve) {\n        resolve(value);\n    });\n};\n\nDummyPromise.prototype.reject = function(value) {\n    /*jslint unparam: true */\n    return new DummyPromise(function(resolve, reject) {\n        reject(value);\n    });\n};\n\nDummyPromise.prototype.race = function(values) {\n    return new DummyPromise(function(resolve, reject) {\n        var /** @type {?} */ i, /** @type {?} */ len;\n        /*jslint plusplus: true */\n        for (i = 0, len = values.length; i < len; i++) {\n            values[i].then(resolve, reject);\n        }\n    });\n};\n\nDummyPromise.prototype.always = function(onFulfilled) {\n    return this.then(onFulfilled, onFulfilled);\n};\n\nDummyPromise.prototype.done = function(onFulfilled) {\n    return this.then(onFulfilled);\n};\n\nDummyPromise.prototype.fail = function(onRejected) {\n    return this.then(null, onRejected);\n};\n\nDummyPromise.prototype.promise = function() {\n    return this;\n};\n\nDummyPromise.prototype.progress = function() {\n    return this;\n};\n","\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isBoolean(x: any): x is boolean {\r\n    return typeof x === 'boolean';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isNumber(x: any): x is number {\r\n    return typeof x === 'number';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isString(x: any): x is string {\r\n    return typeof x === 'string';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isSymbol(x: any): x is symbol {\r\n    return typeof x === 'symbol';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isNull(x: any): x is null {\r\n    return x === null;\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isUndefined(x: any): x is undefined {\r\n    return x === undefined;\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isArray(x: any): x is Array<any> {\r\n    return x instanceof Array;\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isObject(x: any): x is Object {\r\n    return typeof x === 'object';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isFunction(x: any): x is Function {\r\n    return typeof x === 'function';\r\n}\r\n\r\nexport interface ITypeDef {\r\n    name: string,\r\n    val: any,\r\n    pred: (any) => boolean\r\n};\r\n\r\nexport const /** @type {?} */ tyBool: ITypeDef = { name: 'Boolean', val: false, pred: isBoolean };\r\nexport const /** @type {?} */ tyNull: ITypeDef = { name: 'Null', val: null, pred: isNull };\r\nexport const /** @type {?} */ tyUndefined: ITypeDef = { name: 'Undefined', val: undefined, pred: isUndefined };\r\nexport const /** @type {?} */ tyNumber: ITypeDef = { name: 'Number', val: 0, pred: isNumber };\r\nexport const /** @type {?} */ tyString: ITypeDef = { name: 'String', val: '', pred: isString };\r\nexport const /** @type {?} */ tySymbol: ITypeDef = { name: 'Symbol', val: null, pred: isSymbol };\r\nexport const /** @type {?} */ tyObject: ITypeDef = { name: 'Object', val: function() { return {}; }, pred: isObject };\r\nexport const /** @type {?} */ tyArray: ITypeDef = { name: 'Array', val: function() { return []; }, pred: isArray };\r\nexport const /** @type {?} */ tyFunction: ITypeDef = { name: 'Function', val: function() { }, pred: isFunction };\n/**\n * @constant - Predefined types and their properties.\n */\nconst preDefinedTypes: { [key: string]: ITypeDef } = {\r\n    tyBool: tyBool,\r\n    tyNull: tyNull,\r\n    tyUndefined: tyUndefined,\r\n    tyNumber: tyNumber,\r\n    tyString: tyString,\r\n    tySymbol: tySymbol,\r\n    tyObject: tyObject,\r\n    tyArray: tyArray,\r\n    tyFunction: tyFunction\r\n};\n/**\n * Returns the default value for a given type.\n * @param {?} ty\n * @return {?}\n */\nexport function defaultValue(ty: ITypeDef): any {\r\n    let /** @type {?} */ val = ty.val;\r\n    if (ty !== tyFunction && typeof val === 'function') {\r\n        val = val();\r\n    }\r\n    return val;\r\n}\n/**\n * Type checks if a given value is type of the given ty\n * @param {?} value\n * @param {?} ty\n * @return {?}\n */\nexport function ok(value: any, ty: ITypeDef): boolean {\r\n    return ty.pred(value);\r\n}\n/**\n * Returns the type for the given value.\n * @param {?} value\n * @return {?}\n */\nexport function getType(value: any): ITypeDef {\r\n    for (let /** @type {?} */ prop in preDefinedTypes) {\r\n        if (ok(value, preDefinedTypes[prop])) {\r\n            return preDefinedTypes[prop];\r\n        }\r\n    }\r\n    return null;\r\n}\n/**\n * \\@function assert\n * @param {?} value\n * @param {?} ty\n * @return {?}\n */\nexport function assert(value: any, ty: ITypeDef): void {\r\n    if (ok(value, ty)) {\r\n        return;\r\n    }\r\n    throw new Error('type check error: exptected type is ' +\r\n        ty + ' but given type is ' + typeof value);\r\n}\r\n","\n/**\n * Encodes a key-value pair, where a value can be an array.\n * @param {?} key\n * @param {?} value\n * @param {?} str\n * @return {?}\n */\nexport function urlEncodePair(key: string, value: any, str: Array<string>): void {\r\n    if (value instanceof Array) {\r\n        value.forEach((item) => {\r\n            str.push(encodeURIComponent(key) + '[]=' + encodeURIComponent(item));\r\n        });\r\n    } else {\r\n        str.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n    }\r\n}\n/**\n * Encodes an object in www form.\n * @param {?} data\n * @return {?}\n */\nexport function urlEncode(data: Object): string {\r\n    const /** @type {?} */ str: Array<string> = [];\r\n    for (let /** @type {?} */ p in data) {\r\n        if (data.hasOwnProperty(p)) {\r\n            urlEncodePair(p, data[p], str);\r\n        }\r\n    }\r\n    return str.join('&').replace(/%20/g, '+');\r\n}\n/**\n * @param {?} name\n * @param {?} url\n * @return {?}\n */\nexport function getParamByName(name: string, url: string): string | null {\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    const /** @type {?} */ regex = new RegExp('[?#&]' + name + '(=([^&#]*)|&|#|$)');\r\n    const /** @type {?} */ results = regex.exec(url);\r\n    if (!results) {\r\n        return null;\r\n    }\r\n    if (!results[2]) {\r\n        return '';\r\n    }\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\n/**\n * @param {?} name\n * @param {?=} url\n * @return {?}\n */\nexport function getQueryParamByName(name: string, url?: string): string | null {\r\n    if (!url) {\r\n        url = window.location.href;\r\n    }\r\n    return getParamByName(name, url);\r\n}\n/**\n * @param {?} name\n * @param {?=} url\n * @return {?}\n */\nexport function getHashParamByName(name: string, url?: string): string | null {\r\n    if (!url) {\r\n        url = window.location.hash;\r\n    }\r\n    return getParamByName(name, url);\r\n}\r\n","/**\n * @fileOverview\n * Provides utilities for computing hash values\n */\n\n\nimport * as typeChecker from '../typing/type-checker';\n/**\n * Computes the hash code for a given value.\n * This method takes into account the type of the given\n * value when generating its hash code.\n * @param {?} value\n * @return {?}\n */\nexport function hashCode(value: any): number {\n    let /** @type {?} */ hash = 0;\n    if (typeChecker.ok(value, typeChecker.tyBool)) {\n        value = value ? 1 : 0;\n    } else if (typeChecker.ok(value, typeChecker.tyNumber)) {\n        if (value === 0) {\n            return 0;\n        }\n    }\n\n    if (!value) {\n        return 0;\n    }\n\n    value = value.toString();\n    if (value.length === 0) {\n        return hash;\n    }\n    /*jslint plusplus: true */\n    for (let /** @type {?} */ i = 0, /** @type {?} */ len = value.length; i < len; i++) {\n        const /** @type {?} */ chr = value.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n}\n/**\n * Computes the hash code for a member of an object.\n * @param {?} name\n * @param {?} value\n * @param {?} configuration\n * @return {?}\n */\nfunction hashPrimitiveMember(name: string, value: any, configuration: { [key: string]: number }) {\n    const /** @type {?} */ code = hashCode(value);\n    if (configuration) {\n        const /** @type {?} */ bits = configuration[name];\n        if (bits) {\n            return code << configuration[name];\n        }\n    }\n    return code;\n}\n/**\n * Computes the hash code for a member of an object, based on\n * the given member member, the value to be hashed, and the configuration\n * about how each member contributes to the enire hash code of the\n * object.\n * @param {?} name\n * @param {?} value\n * @param {?} configuration\n * @return {?}\n */\nexport function hashMember(name: string, value: any, configuration: { [key: string]: number }) {\n    if (typeChecker.ok(value, typeChecker.tyArray)) {\n        let /** @type {?} */ code = 0;\n        /*jslint plusplus: true */\n        for (let /** @type {?} */ i = 0; i < value.length; i++) {\n            code = code + hashPrimitiveMember(name, value[i], configuration);\n        }\n        return code;\n    }\n    return hashPrimitiveMember(name, value, configuration);\n}\n","import * as typeChecker from './type-checker';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function safeParseString(value: any): string {\r\n    if (!value) {\r\n        return '';\r\n    }\r\n\r\n    return value.toString();\r\n}\n/**\n * Parses a given value into an integer.\n * @param {?} value\n * @return {?}\n */\nexport function safeParseInt(value: any): number {\r\n    if (!value) {\r\n        return 0;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return parseInt(value, 10);\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value;\r\n    }\r\n    return 0;\r\n}\n/**\n * Parses a given value into a float number.\n * @param {?} value\n * @return {?}\n */\nexport function safeParseFloat(value: any): number {\r\n    if (!value) {\r\n        return 0.00;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return parseFloat(value);\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value;\r\n    }\r\n    return 0.00;\r\n}\n/**\n * Parses a given value into a bool value.\n * @param {?} value\n * @return {?}\n */\nexport function safeParseBool(value: any): boolean {\r\n    if (!value) {\r\n        return false;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyBool)) {\r\n        return value;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return value.toLowerCase() === 'true';\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value > 0;\r\n    }\r\n    return false;\r\n}\n/**\n * Returns if a given value can be safely converted into the given type.\n * @param {?} value\n * @param {?} ty\n * @return {?}\n */\nexport function convertible(value: any, ty: typeChecker.ITypeDef): boolean {\r\n    if (typeChecker.ok(value, ty)) {\r\n        return true;\r\n    }\r\n\r\n    if (typeChecker.isNull(value) || typeChecker.isUndefined(value)) {\r\n        return false;\r\n    }\r\n\r\n    if (ty === typeChecker.tyNumber && isNaN(value)) {\r\n        return false;\r\n    }\r\n\r\n    // TODO: refine\r\n    return true;\r\n}\n/**\n * Safely converts the given value into a value of the given type.\n * @param {?} value\n * @param {?} ty\n * @return {?}\n */\nexport function convert(value: any, ty: typeChecker.ITypeDef): any {\r\n    if (ty === typeChecker.tyNumber) {\r\n        return safeParseFloat(value);\r\n    }\r\n    if (ty === typeChecker.tyBool) {\r\n        return safeParseBool(value);\r\n    }\r\n    if (ty === typeChecker.tyString) {\r\n        return value.toString();\r\n    }\r\n\r\n    throw new Error('Cannot convert the given value to the given type');\r\n}\r\n","\n/**\n * Extends a given promise into a deferred object of jQuery.\n * With this extension, we are able to chain together jQuery deferred\n * objects (which are also promise objects.)\n * @param {?} promise\n * @return {?}\n */\nexport function tojQueryDeferred(promise) {\n    if (!promise.always) {\n        promise.always = function(onFulfilled) {\n            return this.then(onFulfilled, onFulfilled);\n        };\n    }\n    if (!promise.done) {\n        promise.done = function(onFulfilled) {\n            return this.then(onFulfilled);\n        };\n    }\n    if (!promise.fail) {\n        promise.fail = function(onRejected) {\n            return this.then(null, onRejected);\n        };\n    }\n    if (!promise.progress) {\n        promise.progress = function() {\n            return this;\n        };\n    }\n    if (!promise.promise) {\n        promise.promise = function() {\n            return this;\n        };\n    }\n    return promise;\n}\n","// \r\n// Author:: Tom Tang <principleware@gmail.com>\r\n// Copyright:: Copyright (c) 2017, Tom Tang\r\n// \r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to\r\n// permit persons to whom the Software is furnished to do so, subject to\r\n// the following conditions:\r\n// \r\n// The above copyright notice and this permission notice shall be\r\n// included in all copies or substantial portions of the Software.\r\n// \r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n// \r\n// Except as contained in this notice, the name(s) of the above copyright\r\n// holders shall not be used in advertising or otherwise to promote the\r\n// sale, use or other dealings in this Software without prior written\r\n// authorization.\r\n\r\n\r\n\nimport { DummyPromise } from './promise-like';\r\nimport * as typeChecker from '../typing/type-checker';\n/**\n * Lifts a single value or a function into a Promise-like object.\rProvides a method of wrapping a single value or a function  into a Promise,\rin order that the following operation \rmay conform to the standard Promise operation.\rIn some scenario, we may first attempt to get a value from cache.\rMotivation.\rIn this case, we need to return a value. However, if the value is\rnot available in the cache, we may have to go ahead to load it\rasynchronously. Loading a value asynchronously usually returns\ra Promise. To untify the return from two cases, we\rescalate a single value into a Promise.\n * @template T\n * @param {?} value\n * @param {?} thisArg\n * @return {?}\n */\nexport function lift<T>(value: T, thisArg: Object): PromiseLike<T> {\r\n    /*jslint unparam: true */\r\n    return new DummyPromise(function(resolve, reject) {\r\n        if (typeChecker.isFunction(value)) {\r\n            const /** @type {?} */ restArgs = [];\r\n            /*jslint plusplus: true */\r\n            for (let /** @type {?} */ i = 2; i < arguments.length; i++) {\r\n                restArgs.push(arguments[i]);\r\n            }\r\n            const /** @type {?} */ ret = value.apply(thisArg || null, restArgs);\r\n            resolve(ret);\r\n        } else {\r\n            resolve(value);\r\n        }\r\n    });\r\n}\n/**\n * Lifts a value into an rejected state.\n * @template T\n * @param {?} value\n * @return {?}\n */\nexport function liftIntoReject<T>(value: T): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        /*jslint unparam: true */\r\n        reject(value);\r\n    });\r\n}\n/**\n * Converts a given promise into another promise which ensures that\rthe given guard evalutes to be true from the state of the given promise.\n * @template T\n * @param {?} promise\n * @param {?} guard\n * @return {?}\n */\nexport function liftWithGuard<T>(promise: PromiseLike<T>, guard: (x: T) => boolean): PromiseLike<T> {\r\n    return promise.then(function(data) {\r\n        return new DummyPromise(function(resolve, reject) {\r\n            if (guard(data)) {\r\n                resolve(data);\r\n            } else {\r\n                reject(data);\r\n            }\r\n        });\r\n    });\r\n}\n/**\n * Settles a promise.\n * @template T\n * @param {?} promise\n * @return {?}\n */\nexport function settle<T>(promise: PromiseLike<T>): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve) {\r\n        promise.then(function(value) {\r\n            resolve({\r\n                state: 'fulfilled',\r\n                data: value\r\n            });\r\n        }, function() {\r\n            resolve({\r\n                state: 'rejected'\r\n            });\r\n        });\r\n    });\r\n}\n/**\n * Converts the given promise into a promise which does not reject anything.\n * @template T\n * @param {?} promise\n * @param {?} guard\n * @return {?}\n */\nexport function liftToPredicate<T>(promise: PromiseLike<T>, guard: (x: T) => boolean): PromiseLike<boolean> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        /*jslint unparam: true */\r\n        promise.then(function(data) {\r\n            resolve(guard(data));\r\n        }, function() {\r\n            resolve(false);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport interface IPipelineSettings<U> {\r\n    validator?: (x) => boolean,\r\n    adaptor: (x) => U\r\n}\n/**\n * Transforms a given promise with additonal pipeline processing.\rSpecifically, in this method, compared to the given promise, the return\rpromise contains validating and adpating stages.\n * @template T, U\n * @param {?} readerPromise\n * @param {?} settings\n * @return {?}\n */\nexport function readerPipeline<T, U>(readerPromise: PromiseLike<T>, settings: IPipelineSettings<U>) {\r\n    return readerPromise\r\n        .then(function(data) {\r\n            if (settings.validator) {\r\n                if (!settings.validator(data)) {\r\n                    throw new Error('Data is not valid: ' + data);\r\n                }\r\n            }\r\n            return data;\r\n        })\r\n        .then(function(data) {\r\n            return settings.adaptor(data);\r\n        });\r\n}\n/**\n * Transforms a given promise into one promise with our own implementation.\n * @template T\n * @param {?} promise\n * @return {?}\n */\nexport function transform<T>(promise: PromiseLike<T>): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        promise.then(resolve, reject);\r\n    });\r\n}\r\n","\n/**\n * Pushs an array or a single value into the thisArg;\n * @template T\n * @param {?} thisArg\n * @param {?} src\n * @return {?}\n */\nexport function pushArray<T>(thisArg: Array<T>, src: Array<T> | T): void {\r\n    if (!(src instanceof Array)) {\r\n        thisArg.push(src);\r\n        return;\r\n    }\r\n\r\n    src.forEach(function(item) {\r\n        thisArg.push(item);\r\n    });\r\n}\n/**\n * Turns the values in an object into an array\n * @param {?} o\n * @return {?}\n */\nexport function makeArray(o: Object) {\r\n    const /** @type {?} */ ret = [];\r\n    for (let /** @type {?} */ n in o) {\r\n        if (o.hasOwnProperty(n)) {\r\n            ret.push(o[n]);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","\n/**\n * Generates a guid.\n * @return {?}\n */\nexport function guid() {\r\n    let /** @type {?} */ d = new Date().getTime();\r\n    const /** @type {?} */ uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        const /** @type {?} */ r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\n/**\n * Generates a random number between the given range\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nexport function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","\n/**\n * Replaces the placeholders a given format with the given parameters.\n * @param {?} format\n * @param {?} params\n * @return {?}\n */\nexport function replace(format: string, params: { [key: string]: any }): string {\r\n    /*jslint unparam: true */\r\n    return format.replace(/\\{([a-zA-Z]+)\\}/g, function(s, key) {\r\n        return (typeof params[key] === 'undefined') ? '' : params[key];\r\n    });\r\n}\n/**\n * Transforms the given string into one where\rsome characters have been properly replaced with\rtheir escape versions.\n * @param {?} data\n * @return {?}\n */\nexport function applyEscape(data: string): string {\r\n    data = data\r\n        .replace(/[\\\\]/g, '\\\\\\\\')\r\n        .replace(/[\\\"]/g, '\\\\\\\"')\r\n        .replace(/[\\/]/g, '\\\\/')\r\n        .replace(/[\\b]/g, '\\\\b')\r\n        .replace(/[\\f]/g, '\\\\f')\r\n        .replace(/[\\n]/g, '\\\\n')\r\n        .replace(/[\\r]/g, '\\\\r')\r\n        .replace(/[\\t]/g, '\\\\t');\r\n    return data;\r\n}\n/**\n * Undo the work by applyEscape. It replaces the escape\rcharacters with their unescaped ones.\n * @param {?} data\n * @return {?}\n */\nexport function reverseEscape(data: string): string {\r\n    data = data\r\n        .replace(/\\\\\\\\/g, '\\\\')\r\n        .replace(/\\\\\\\"/g, '\\\"')\r\n        .replace(/\\\\\\//g, '\\/')\r\n        .replace(/\\\\\\b/g, '\\b')\r\n        .replace(/\\\\\\f/g, '\\f')\r\n        .replace(/\\\\\\n/g, '\\n')\r\n        .replace(/\\\\\\r/g, '\\r')\r\n        .replace(/\\\\\\t/g, '\\t');\r\n    return data;\r\n}\r\n"],"names":["fn","thisArg","apply","arguments","isArray","Array","value","Object","prototype","toString","call","onFulfilled","onRejected","done","reason","ex","deferred","me","this","_state","setTimeout","cb","ret","_value","e","reject","resolve","_deferreds","push","i","len","length","handle","newValue","finale","TypeError","then","doResolve","bind","DummyPromise","all","arrayArg","args","slice","remaining","val","res","constructor","race","values","always","fail","promise","progress","x","undefined","tyBool","name","pred","isBoolean","tyNull","isNull","tyUndefined","isUndefined","tyNumber","isNumber","tyString","isString","tySymbol","isSymbol","tyObject","isObject","tyArray","tyFunction","isFunction","preDefinedTypes","ty","key","str","forEach","item","encodeURIComponent","url","replace","results","RegExp","exec","decodeURIComponent","hash","typeChecker.ok","typeChecker.tyBool","typeChecker.tyNumber","charCodeAt","configuration","code","hashCode","typeChecker.tyString","parseFloat","toLowerCase","typeChecker.isFunction","restArgs","guard","data","state","readerPromise","settings","validator","Error","adaptor","src","o","n","hasOwnProperty","d","Date","getTime","c","r","Math","random","floor","min","max","format","params","s","p","urlEncodePair","join","window","location","href","getParamByName","typeChecker.tyArray","hashPrimitiveMember","parseInt","typeChecker.isNull","typeChecker.isUndefined","isNaN","safeParseFloat","safeParseBool","prop","ok"],"mappings":"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"}